# =============================================================================
# API TESTS - Microsserviços Walletcore & Balances
# =============================================================================
# 
# Este arquivo contém todas as requisições para testar os endpoints dos microsserviços.
# 
# Dados pré-carregados:
# - Clientes: client-001, client-002, client-003
# - Contas: account-001 (R$1000), account-002 (R$500), account-003 (R$750)
#
# =============================================================================

# =============================================================================
# 1. CRIAR NOVOS CLIENTES (Walletcore API - Port 8080) - OPCIONAL
# =============================================================================

### Criar cliente - John Doe
POST http://localhost:8080/clients HTTP/1.1
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john@example.com"
}

### Criar cliente - Jane Smith
POST http://localhost:8080/clients HTTP/1.1
Content-Type: application/json

{
  "name": "Jane Smith",
  "email": "jane@example.com"
}

### Criar cliente - Bob Wilson
POST http://localhost:8080/clients HTTP/1.1
Content-Type: application/json

{
  "name": "Bob Wilson",
  "email": "bob@example.com"
}

# =============================================================================
# 2. CRIAR CONTAS (Walletcore API - Port 8080)
# =============================================================================

### Criar conta para cliente pré-existente (client-001)
POST http://localhost:8080/accounts HTTP/1.1
Content-Type: application/json

{
  "client_id": "client-001"
}

### Criar conta para cliente pré-existente (client-002)
POST http://localhost:8080/accounts HTTP/1.1
Content-Type: application/json

{
  "client_id": "client-002"
}

### IMPORTANTE: Para criar conta para os novos clientes criados acima,
### substitua o client_id pelo ID retornado na resposta da criação do cliente

### Criar conta para John Doe (substitua pelo ID real do cliente)
# POST http://localhost:8080/accounts HTTP/1.1
# Content-Type: application/json
# 
# {
#   "client_id": "SUBSTITUA_PELO_ID_DO_JOHN_DOE"
# }

# =============================================================================
# 3. REALIZAR TRANSAÇÕES (Walletcore API - Port 8080)
# =============================================================================

###

# Adicionar saldo (Se nao for uma conta pré-existente)
POST http://localhost:8080/accounts/credit HTTP/1.1
Content-Type: application/json

{
  "account_id": "574721f5-a864-484d-8716-570f852841cf",
  "client_id": "client-001",
  "amount": 1000.00
}

### Transação 1: account-001 → account-002 (R$ 100.00)
POST http://localhost:8080/transactions HTTP/1.1
Content-Type: application/json

{
  "account_id_from": "account-001",
  "account_id_to": "account-002",
  "amount": 100.00
}

### Transação 2: account-002 → account-003 (R$ 50.00)
POST http://localhost:8080/transactions HTTP/1.1
Content-Type: application/json

{
  "account_id_from": "account-002",
  "account_id_to": "account-003",
  "amount": 50.00
}

### Transação 3: account-003 → account-001 (R$ 25.00)
POST http://localhost:8080/transactions HTTP/1.1
Content-Type: application/json

{
  "account_id_from": "account-003",
  "account_id_to": "account-001",
  "amount": 25.00
}

### Transação 4: Valor maior (R$ 500.00)
POST http://localhost:8080/transactions HTTP/1.1
Content-Type: application/json

{
  "account_id_from": "account-001",
  "account_id_to": "account-003",
  "amount": 500.00
}

# =============================================================================
# 5. VERIFICAR SALDOS APÓS TRANSAÇÕES (Balances API - Port 3003)
# =============================================================================

### Verificar saldo da conta 001 após transações
GET http://localhost:3003/balances/account-001 HTTP/1.1
Content-Type: application/json

### Verificar saldo da conta 002 após transações
GET http://localhost:3003/balances/account-002 HTTP/1.1
Content-Type: application/json

### Verificar saldo da conta 003 após transações
GET http://localhost:3003/balances/account-003 HTTP/1.1
Content-Type: application/json

# =============================================================================
# INSTRUÇÕES DE USO:
# =============================================================================
#
# 1. Certifique-se de que os serviços estão rodando:
#    docker compose up -d
#
# 2. Aguarde alguns segundos para inicialização completa
#
# 3. Execute as requisições na ordem sugerida:
#    - Primeiro: Consulte os saldos iniciais (seção 1)
#    - Depois: Crie novos clientes se necessário (seção 2)
#    - Em seguida: Crie contas (seção 3)
#    - Então: Realize transações (seção 4)
#    - Finalmente: Verifique os saldos atualizados (seção 5)
#
# 4. Para usar no VS Code:
#    - Instale a extensão "REST Client"
#    - Clique em "Send Request" acima de cada requisição
#
# =============================================================================
